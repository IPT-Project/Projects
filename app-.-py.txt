from flask import Flask, render_template, request, redirect, url_for, flash


from flask_sqlalchemy import SQLAlchemy

import pymysql




pymysql.install_as_MySQLdb()

app = Flask(__name__)
app.secret_key = "Secret Key"
#SqlAlchemy Database Configuration With Mysql
app.config['SQLALCHEMY_DATABASE_URI'] = 'mysql://root:''@localhost/crud'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False


db = SQLAlchemy(app)

#Creating model table for our CRUD database
class Data(db.Model):
    id = db.Column(db.Integer, primary_key = True)
    name = db.Column(db.String(100))
    email = db.Column(db.String(100))
    course = db.Column(db.String(100))

    def __init__(self, name, email, course):
        self.name = name
        self.email = email
        self.course = course




#This is the index route where we are going to
#query on all our student data
@app.route('/')
def Index ():
    all_data = Data.query.all()
    return  render_template("index.html" , students = all_data)



#this route is for inserting data to mysql database via html forms
@app.route('/insert', methods = ['POST'])
def insert():

     if request.method == 'POST':
       name = request.form['name']
       email = request.form['email']
       course = request.form['course']


     my_data = Data(name, email, course)
     db.session.add(my_data)
     db.session.commit()

     flash("Student Inserted Successfully")


     return redirect(url_for('Index'))

#this is our update route where we are going to update our student
@app.route('/update', methods=['GET', 'POST'])
def update():
    if request.method == 'POST':
        my_data = Data.query.get(request.form.get('id'))

        my_data.name = request.form['name']
        my_data.email = request.form['email']
        my_data.course = request.form['course']

        db.session.commit()
        flash("Student Updated Successfully")

        return redirect(url_for('Index'))

#This route is for deleting our student
@app.route('/delete/<id>/', methods=['GET', 'POST'])
def delete(id):
    my_data = Data.query.get(id)
    db.session.delete(my_data)
    db.session.commit()
    flash("Student Deleted Successfully")

    return redirect(url_for('Index'))


if __name__ == "__main__":
    app.run(debug=True)